//Arrays

// 1] Find the largest element in the array.
//    Given an array of integers nums, return the value of the largest element in the array.
//  => Logic:- Declare first element in array as largest element and then use for loop to go through all 
//             elements in array and using if check if any othe element is greater than than maxNum and replace
//             the maxNum with the greates element in array.


public class questions{
    public static void main(String[] args){
        int[] nums = {3, 3, 6, 1};                      //Given Array

        int maxNum = nums[0];                           //This is to assume the first index element is largest

        //Loop through the array
        for (int i=1; i<nums.length; i++){
            if(nums[i] > maxNum){                       // If any number is bigger than maxNum
                maxNum =nums[i];                         // Replace the bigger element as maxNum
            }
        }
        System.out.println("The largest element in Array is " + maxNum);
    }
}


// 2] Check if the Array is Sorted
//    Given an array nums of n integers, return true if the array nums is sorted in non-decreasing order
//    or else false.
//  => Logic:- Use boolean and create a function using for loop where i=1 so that u can compare element on 2nd 
//             index with previous one using if(nums[i] < nums[i-1])and return false or true.

public class questions{
    public static boolean isSorted(int[] nums){
        for(int i=1; i<nums.length; i++){        // i=1 we need to compare each element with the previous one
            if(nums[i] < nums[i-1]){             //checks if the current element is smaller than the previous element
                return false;                    //Array is not sorted.
            }
        }return true;                           //Array is sorted
    }
    public static void main(String[] args) {
        int[] nums = {4, 5, 90, 12, 74};        //Array 
        System.out.println("Is Array sorted ? " + isSorted(nums));
    }
}

// 3] Find Second Smallest and Second Largest Element in an array
//    Given an array, find the second smallest and second largest element in the array. Print ‘Doesn't exist’ in the event that either of them doesn’t exist.
// => Logic :- Sort the array, then pick the first element greater than the smallest as the second smallest, and the first element smaller than the largest
//             as the second largest; if either doesn’t exist, return -1.

import java.util.*;

public class questions{
    public static void main(String[] args) {
        int[] nums = {2, 4, 1, 3, 5};

        Arrays.sort(nums);          //Sorts the Array in ascending number.

        if(nums.length < 2){                                                    //Checks whether second smallest or largest element doesn't exist
            System.out.println("Secondsmallest = Doesn't exist");
            System.out.println("Secondlargest = Doesn't exist");
            return;
        }

        //Find Second smallest    
        int secondSmallest = -1;                // -1 means not found yet
        for(int i=1; i<nums.length; i++){       // Loop starts at i = 1 (second element), because nums[0] is already the smallest after sorting.
            if(nums[i] != nums[0]){             // check if the current element nums[i] is different from the smallest
                secondSmallest = nums[i];
                break;
            }
        }

        //Find Second largest
        int secondLargest = -1;
        for(int i = nums.length - 2; i >= 0; i--){      //Start from the second last element (n-2), because nums[n-1] is the largest after sorting. Move backwards
            if(nums[i] != nums[nums.length - 1]){       //check if current element nums[i] is different from nums[n-1]
                secondLargest =nums[i];
                break;
            }
        }

        System.out.println("Second Smallest = " + secondSmallest);
        System.out.println("Second Largest = " + secondLargest);

    }
}
