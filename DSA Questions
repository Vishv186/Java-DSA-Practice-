//Arrays

// 1] Find the largest element in the array.
//    Given an array of integers nums, return the value of the largest element in the array.
//  => Logic:- Declare first element in array as largest element and then use for loop to go through all 
//             elements in array and using if check if any othe element is greater than than maxNum and replace
//             the maxNum with the greates element in array.


public class questions{
    public static void main(String[] args){
        int[] nums = {3, 3, 6, 1};                      //Given Array

        int maxNum = nums[0];                           //This is to assume the first index element is largest

        //Loop through the array
        for (int i=1; i<nums.length; i++){
            if(nums[i] > maxNum){                       // If any number is bigger than maxNum
                maxNum =nums[i];                         // Replace the bigger element as maxNum
            }
        }
        System.out.println("The largest element in Array is " + maxNum);
    }
}


// 2] Check if the Array is Sorted
//    Given an array nums of n integers, return true if the array nums is sorted in non-decreasing order
//    or else false.
//  => Logic:- Use boolean and create a function using for loop where i=1 so that u can compare element on 2nd 
//             index with previous one using if(nums[i] < nums[i-1])and return false or true.

public class questions{
    public static boolean isSorted(int[] nums){
        for(int i=1; i<nums.length; i++){        // i=1 we need to compare each element with the previous one
            if(nums[i] < nums[i-1]){             //checks if the current element is smaller than the previous element
                return false;                    //Array is not sorted.
            }
        }return true;                           //Array is sorted
    }
    public static void main(String[] args) {
        int[] nums = {4, 5, 90, 12, 74};        //Array 
        System.out.println("Is Array sorted ? " + isSorted(nums));
    }
}
